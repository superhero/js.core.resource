{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2018-06-19T14:19:34.918Z",
    "end": "2018-06-19T14:19:34.971Z",
    "duration": 53,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "e97e19a2-4979-4072-9ada-568febb7ed75",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "e894494b-6361-4db8-837a-75e3ed4e61b1",
        "title": "resource dispatcher integration tests",
        "fullFile": "/home/erik/Projects/@superhero/js.core.resource/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "resource dispatcher integration tests \"before all\" hook",
            "timedOut": false,
            "duration": 9,
            "pass": false,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"index\",\n      \"policy\": {}\n    }\n  ]\n}",
            "code": "require.main.filename = __filename\ncontext(this, { title:'routes', value:routes })\nserver = core.server('http', routes, { debug:false })\nserver.on('listening', () => done())\nserver.listen(9001)",
            "err": {},
            "isRoot": false,
            "uuid": "9343a07e-052f-4096-9b85-3e7fadc0d427",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "resource dispatcher integration tests \"after all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "server.close()",
            "err": {},
            "isRoot": false,
            "uuid": "9dbd7b4a-542a-4270-bbd5-24c611665506",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "404 status response",
            "fullTitle": "resource dispatcher integration tests 404 status response",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/none-existent.url')\nexpect(file.status).to.be.equal(404)",
            "err": {},
            "isRoot": false,
            "uuid": "41f1b5e2-bccd-45fd-a072-12e4b255d776",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "jpg content-type header",
            "fullTitle": "resource dispatcher integration tests jpg content-type header",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.jpg')\nexpect(file.headers['content-type']).to.be.equal('image/jpeg')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "79eb8bd9-ba9c-4933-b629-48df50c706ef",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "gif content-type header",
            "fullTitle": "resource dispatcher integration tests gif content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.gif')\nexpect(file.headers['content-type']).to.be.equal('image/gif')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "5a92780a-4101-43ed-a47f-38e0ddfa82aa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "png content-type header",
            "fullTitle": "resource dispatcher integration tests png content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.png')\nexpect(file.headers['content-type']).to.be.equal('image/png')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "698e4efb-ebb8-4da0-97a3-76cb747138e0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "ico content-type header",
            "fullTitle": "resource dispatcher integration tests ico content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.ico')\nexpect(file.headers['content-type']).to.be.equal('image/vnd.microsoft.icon')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "331c5583-a981-4b49-a4f5-1f04d8e2d4cf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "css content-type header",
            "fullTitle": "resource dispatcher integration tests css content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.css')\nexpect(file.headers['content-type']).to.be.equal('text/css')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "7f9269fb-fb33-4b87-98b7-e2219337013e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "csv content-type header",
            "fullTitle": "resource dispatcher integration tests csv content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.csv')\nexpect(file.headers['content-type']).to.be.equal('text/csv')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "2a09db60-0e91-41bf-a828-7ae3646596ea",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "pdf content-type header",
            "fullTitle": "resource dispatcher integration tests pdf content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.pdf')\nexpect(file.headers['content-type']).to.be.equal('application/pdf')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "8890dcca-34c0-4670-b114-e19d08c44d8e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "json content-type header",
            "fullTitle": "resource dispatcher integration tests json content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.json')\nexpect(file.headers['content-type']).to.be.equal('application/json')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "29160be5-d1a4-4e8b-bc01-90d8a9aea6b4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "js content-type header",
            "fullTitle": "resource dispatcher integration tests js content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.js')\nexpect(file.headers['content-type']).to.be.equal('application/javascript')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "bb31a216-877f-45f9-be18-1986e1504109",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "41f1b5e2-bccd-45fd-a072-12e4b255d776",
          "79eb8bd9-ba9c-4933-b629-48df50c706ef",
          "5a92780a-4101-43ed-a47f-38e0ddfa82aa",
          "698e4efb-ebb8-4da0-97a3-76cb747138e0",
          "331c5583-a981-4b49-a4f5-1f04d8e2d4cf",
          "7f9269fb-fb33-4b87-98b7-e2219337013e",
          "2a09db60-0e91-41bf-a828-7ae3646596ea",
          "8890dcca-34c0-4670-b114-e19d08c44d8e",
          "29160be5-d1a4-4e8b-bc01-90d8a9aea6b4",
          "bb31a216-877f-45f9-be18-1986e1504109"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 31,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}