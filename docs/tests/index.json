{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-25T10:57:48.164Z",
    "end": "2018-05-25T10:57:48.221Z",
    "duration": 57,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "e7bfe745-6dd1-4abc-9874-c7064692b915",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "b19ae450-4e0b-4201-82f2-16a71195f07d",
        "title": "resource dispatcher integration tests",
        "fullFile": "/home/erik/Projects/@superhero/js.core.resource/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "resource dispatcher integration tests \"before all\" hook",
            "timedOut": false,
            "duration": 10,
            "pass": false,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"index\",\n      \"policy\": {}\n    }\n  ]\n}",
            "code": "require.main.filename = __filename\ncontext(this, { title:'routes', value:routes })\nserver = core.server('http', routes, { debug:false })\nserver.on('listening', () => done())\nserver.listen(9001)",
            "err": {},
            "isRoot": false,
            "uuid": "65ebeddb-aa9f-430f-b04f-4eab04c049c7",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "resource dispatcher integration tests \"after all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "server.close()",
            "err": {},
            "isRoot": false,
            "uuid": "a26873e0-b54d-4272-ae23-7b5eba303b2b",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "404 status response",
            "fullTitle": "resource dispatcher integration tests 404 status response",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/none-existent.url')\nexpect(file.status).to.be.equal(404)",
            "err": {},
            "isRoot": false,
            "uuid": "63faeedc-01aa-4bc2-8f5d-aea504313048",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "jpg content-type header",
            "fullTitle": "resource dispatcher integration tests jpg content-type header",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.jpg')\nexpect(file.headers['content-type']).to.be.equal('image/jpeg')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "49158256-506c-4544-a38b-ed24adf0e6de",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "gif content-type header",
            "fullTitle": "resource dispatcher integration tests gif content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.gif')\nexpect(file.headers['content-type']).to.be.equal('image/gif')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "daa72cce-a3f0-41eb-9dce-76fe7677e6f8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "png content-type header",
            "fullTitle": "resource dispatcher integration tests png content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.png')\nexpect(file.headers['content-type']).to.be.equal('image/png')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "4b9bc88e-4d0f-410f-84b0-d7ef76fd26c3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "ico content-type header",
            "fullTitle": "resource dispatcher integration tests ico content-type header",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.ico')\nexpect(file.headers['content-type']).to.be.equal('image/vnd.microsoft.icon')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "5020ff72-536a-49aa-87b9-6aa12d1663a6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "css content-type header",
            "fullTitle": "resource dispatcher integration tests css content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.css')\nexpect(file.headers['content-type']).to.be.equal('text/css')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "d537b4f4-54a8-4e39-aa6e-8715ed931f1d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "csv content-type header",
            "fullTitle": "resource dispatcher integration tests csv content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.csv')\nexpect(file.headers['content-type']).to.be.equal('text/csv')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "0453be26-db69-40d1-a32e-a235deab5466",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "pdf content-type header",
            "fullTitle": "resource dispatcher integration tests pdf content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.pdf')\nexpect(file.headers['content-type']).to.be.equal('application/pdf')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "bac30699-57a6-4d3b-9cb8-2297d6e32a8b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "json content-type header",
            "fullTitle": "resource dispatcher integration tests json content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.json')\nexpect(file.headers['content-type']).to.be.equal('application/json')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "fb854c01-e328-4be4-9d52-59a7920cbbd1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "js content-type header",
            "fullTitle": "resource dispatcher integration tests js content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.js')\nexpect(file.headers['content-type']).to.be.equal('application/javascript')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "736e3d73-1439-46da-98cf-a5eb33476af1",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "63faeedc-01aa-4bc2-8f5d-aea504313048",
          "49158256-506c-4544-a38b-ed24adf0e6de",
          "daa72cce-a3f0-41eb-9dce-76fe7677e6f8",
          "4b9bc88e-4d0f-410f-84b0-d7ef76fd26c3",
          "5020ff72-536a-49aa-87b9-6aa12d1663a6",
          "d537b4f4-54a8-4e39-aa6e-8715ed931f1d",
          "0453be26-db69-40d1-a32e-a235deab5466",
          "bac30699-57a6-4d3b-9cb8-2297d6e32a8b",
          "fb854c01-e328-4be4-9d52-59a7920cbbd1",
          "736e3d73-1439-46da-98cf-a5eb33476af1"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 31,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}