{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-16T15:35:47.624Z",
    "end": "2018-05-16T15:35:47.678Z",
    "duration": 54,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "6d41dae6-0459-4c89-80b2-7b0224eeacc4",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "2eb7d439-fdd9-4547-9644-970c80fcdbad",
        "title": "resource dispatcher integration tests",
        "fullFile": "/home/erik/Projects/@superhero/js.core.resource/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "resource dispatcher integration tests \"before all\" hook",
            "timedOut": false,
            "duration": 9,
            "pass": false,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"index\",\n      \"policy\": {}\n    }\n  ]\n}",
            "code": "require.main.filename = __filename\ncontext(this, { title:'routes', value:routes })\nserver = core.server('http', routes, { debug:false })\nserver.on('listening', () => done())\nserver.listen(9001)",
            "err": {},
            "isRoot": false,
            "uuid": "1e01f487-c724-4e59-adc3-50b5bcef1658",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "resource dispatcher integration tests \"after all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "server.close()",
            "err": {},
            "isRoot": false,
            "uuid": "9919cce5-e921-472b-b38f-89fdf2efeb79",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "404 status response",
            "fullTitle": "resource dispatcher integration tests 404 status response",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/none-existent.url')\nexpect(file.status).to.be.equal(404)",
            "err": {},
            "isRoot": false,
            "uuid": "1b05f5e6-447d-4560-aaee-28686bc06997",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "jpg content-type header",
            "fullTitle": "resource dispatcher integration tests jpg content-type header",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.jpg')\nexpect(file.headers['content-type']).to.be.equal('image/jpeg')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "4209f89c-b1d6-49ea-b0c8-d9c82184d2e6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "gif content-type header",
            "fullTitle": "resource dispatcher integration tests gif content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.gif')\nexpect(file.headers['content-type']).to.be.equal('image/gif')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "589446b5-f2cd-49fa-bac2-b1f6402c8727",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "png content-type header",
            "fullTitle": "resource dispatcher integration tests png content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.png')\nexpect(file.headers['content-type']).to.be.equal('image/png')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "b48ccd99-4edb-432b-aa2b-0b0a263a9108",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "ico content-type header",
            "fullTitle": "resource dispatcher integration tests ico content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.ico')\nexpect(file.headers['content-type']).to.be.equal('image/vnd.microsoft.icon')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "57cd94c5-4912-4a81-b13b-caaf19fe7784",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "css content-type header",
            "fullTitle": "resource dispatcher integration tests css content-type header",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.css')\nexpect(file.headers['content-type']).to.be.equal('text/css')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "c54b11c2-cac5-4167-871f-0d0ac207555b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "csv content-type header",
            "fullTitle": "resource dispatcher integration tests csv content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.csv')\nexpect(file.headers['content-type']).to.be.equal('text/csv')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "41fda8c7-ebb4-4a41-96b6-41e97656137f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "pdf content-type header",
            "fullTitle": "resource dispatcher integration tests pdf content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.pdf')\nexpect(file.headers['content-type']).to.be.equal('application/pdf')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "bb421d71-8530-433a-b143-a9091eb4ff85",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "json content-type header",
            "fullTitle": "resource dispatcher integration tests json content-type header",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.json')\nexpect(file.headers['content-type']).to.be.equal('application/json')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "2a7685d5-fd67-44e9-ab6e-0aa79895e961",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "js content-type header",
            "fullTitle": "resource dispatcher integration tests js content-type header",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const file = await request.get('/file.js')\nexpect(file.headers['content-type']).to.be.equal('application/javascript')\nexpect(file.status).to.be.equal(200)",
            "err": {},
            "isRoot": false,
            "uuid": "d17e8162-f10b-45f0-9482-f6e70dc4c155",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "1b05f5e6-447d-4560-aaee-28686bc06997",
          "4209f89c-b1d6-49ea-b0c8-d9c82184d2e6",
          "589446b5-f2cd-49fa-bac2-b1f6402c8727",
          "b48ccd99-4edb-432b-aa2b-0b0a263a9108",
          "57cd94c5-4912-4a81-b13b-caaf19fe7784",
          "c54b11c2-cac5-4167-871f-0d0ac207555b",
          "41fda8c7-ebb4-4a41-96b6-41e97656137f",
          "bb421d71-8530-433a-b143-a9091eb4ff85",
          "2a7685d5-fd67-44e9-ab6e-0aa79895e961",
          "d17e8162-f10b-45f0-9482-f6e70dc4c155"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 29,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}